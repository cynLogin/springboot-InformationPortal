<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springbootdemo.mapper.NoticeMapper">
    <select id="getByType" parameterType="String" resultType="com.example.springbootdemo.bean.NoticeDepartmentBean">
        SELECT notice.notice_no,title,DATE(sendtime)as sendtime,department_name,content FROM
        notice left join department on notice.department_no=department.department_no left join notice_receiver
        on notice.notice_no=notice_receiver.notice_no
        where notice_type =#{noticeType} and receiverID=#{receiverID}
        ORDER BY notice.sendtime DESC
    </select>
    <select id="getAll" resultType="com.example.springbootdemo.bean.NoticeBean">
        SELECT * FROM notice
    </select>
    <select id="getById" parameterType="String" resultType="com.example.springbootdemo.bean.NoticeDetailBean">
        SELECT title,department_name,username,content,sendtime,notice_type
        FROM notice left join allpeople on notice.senderID=allpeople.userID left join department
        on allpeople.department_no=department.department_no
        WHERE notice_no = #{noticeId}
    </select>
    <insert id="insertNotice" >
        CALL notice_insert(#{senderID}, #{title}, #{content}, #{notice_type}, (select department_no from allpeople where userID=#{senderID}))
    </insert>
    <select id="getBySenderId" parameterType="String" resultType="com.example.springbootdemo.bean.NoticeBean">
        SELECT * FROM notice where senderID=#{senderID}
    </select>
    <select id="getBySenderIdDepartment" parameterType="String" resultType="com.example.springbootdemo.bean.NoticeDepartmentBean">
        SELECT notice_no,title,DATE(sendtime)as sendtime,department_name,content FROM
            notice left join department on notice.department_no=department.department_no
        where senderID =#{senderID}
        ORDER BY notice.sendtime DESC
    </select>
    <update id="updateNoticeById">
        UPDATE notice
        SET
            notice_no=#{notice_no},
            title=#{title},
            content=#{content},
            notice_type=#{notice_type}
        WHERE notice_no=#{notice_no}
    </update>
    <delete id="deleteNoticeById" parameterType="int">
        DELETE FROM notice
        WHERE notice_no = #{notice_no}
    </delete>
    <select id="getByTypeTitleDepartment" parameterType="String" resultType="com.example.springbootdemo.bean.NoticeDepartmentBean">
        SELECT notice.notice_no,title,DATE(sendtime)as sendtime,department_name,content FROM
            notice left join department on notice.department_no=department.department_no left join notice_receiver
            on notice.notice_no=notice_receiver.notice_no
        where notice_type =#{noticeType} and receiverID=#{receiverID}
        and title like CONCAT('%',#{title},'%') and department_name like CONCAT('%',#{departmentName},'%')
        ORDER BY notice.sendtime DESC
    </select>
</mapper>